'use strict';

import Model from './model.js';

export default class Editor extends Model {
	constructor( features ) {
		super();

		console.log( 'Editor.constructor()' );

		this._features = features;
		this.features = new Map();
	}

	init() {
		const promises = [];
		const features = this.features;
		const that = this;

		this._features.forEach( ( featureName ) => {
			let featurePath;

			if ( featureName.indexOf( '/' ) == -1 ) {
				featurePath = `ckeditor5-${ featureName }/src/${ featureName }`;
			} else {
				featurePath = `ckeditor5-${ featureName.replace( /\//, '/src/' ) }`;
			}

			const promise = System
				.import( featurePath )
				.then( ( FeatureModule ) => {
					const requires = FeatureModule.requires;
					const Feature = FeatureModule.default;

					if ( requires ) {
						requires.forEach( ( DepFeature ) => {
							if ( !isAlreadyInited( DepFeature ) ) {
								initFeature( null, DepFeature );
							}
						} );
					}

					initFeature( featureName, Feature );
				} );

			promises.push( promise );
		} );

		return Promise.all( promises ).then( () => this );

		function initFeature( featureName, Feature ) {
			const feature = new Feature( that );

			if ( featureName ) {
				features.set( featureName, feature );
			}

			features.set( Feature, feature );
		}

		function isAlreadyInited( Feature ) {
			return !!features.get( Feature );
		}
	}
}